import Link from "next/link";
import axios from "axios";
import { getToken } from "@/utils/tokenCookie";
import styles from "@/styles/projectCard.module.css";

export default function ProjectCard({ project, onDelete, onRename }) {
  const handleDelete = async () => {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.')) {
      try {
        const token = getToken();
        await axios.delete(`/api/projects/${project.id}`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (onDelete) onDelete(project.id);
      } catch (e) {
        alert(e.response?.data?.error || e.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞');
      }
    }
  };

  const handleRename = async () => {
    const newName = prompt("–ù–æ–≤–æ–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞:", project.name);
    if (!newName || newName === project.name) return;
    try {
      const token = getToken();
      const res = await axios.put(
        `/api/projects/${project.id}`,
        { name: newName, description: project.description },
        { headers: { 'Authorization': `Bearer ${token}` } }
      );
      if (onRename) onRename(res.data);
    } catch (e) {
      alert(e.response?.data?.error || e.message || '–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞');
    }
  };
  return (
    <div className={styles.projectCard}>
      <div className={styles.cardHeader}>
        <div className={styles.statusIndicator}></div>
        <div className={styles.cardActions}>
          <button
            onClick={handleRename}
            className={styles.actionButton}
            title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
          >
            ‚úèÔ∏è
          </button>
          <button
            onClick={handleDelete}
            className={`${styles.actionButton} ${styles.deleteButton}`}
            title="–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
          >
            üóëÔ∏è
          </button>
        </div>
      </div>
      
      <div className={styles.cardContent}>
        <h3 className={styles.projectTitle}>{project.name}</h3>
        <p className={styles.projectDescription}>
          {project.description || <span className={styles.noDescription}>–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è</span>}
        </p>
      </div>
      
      <div className={styles.cardFooter}>
        <Link
          href={`/projects/${project.id}/editor`}
          className={styles.openButton}
        >
          <span className={styles.buttonIcon}></span>
          –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä
        </Link>
      </div>
      
      <div className={styles.cardGlow}></div>
    </div>
  );
}