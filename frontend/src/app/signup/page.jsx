'use client';
import { useState } from "react";
import axios from "axios";
import { setToken } from "@/utils/tokenCookie";
import styles from "@/styles/auth.module.css";

export default function SignUpPage() {
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setSuccess("");

    if (password !== confirmPassword) {
      setError("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
      return;
    }

    if (password.length < 6) {
      setError("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤");
      return;
    }

    setIsLoading(true);
    
    try {
      await axios.post("/api/auth/register", { username, email, password });
      setSuccess("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...");
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      setTimeout(async () => {
        try {
          const res = await axios.post("/api/auth/login", { email, password });
          setToken(res.data.token);
          window.location.href = "/projects";
        } catch (e) {
          window.location.href = "/login/email";
        }
      }, 1500);
    } catch (e) {
      setError(e.response?.data?.error || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className={styles.authContainer}>
      <div className={styles.authBackground}>
        <div className={styles.authGrid}></div>
        <div className={styles.authGlow}></div>
      </div>
      
      <div className={`${styles.authContent} ${styles.authContentWide}`}>
        <div className={styles.authHeader}>
          <a href="/" className={styles.authLogo}>
            <span className={styles.logoIcon}>üê≥</span>
            <span className={styles.logoText}>DockerGo</span>
          </a>
        </div>

        <div className={styles.authCard}>
          <div className={styles.cardHeader}>
            <h1 className={styles.cardTitle}>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h1>
            <p className={styles.cardSubtitle}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤</p>
          </div>

          <form onSubmit={handleSubmit} className={styles.authForm}>
            {error && (
              <div className={styles.errorMessage}>
                <span className={styles.errorIcon}>‚ö†Ô∏è</span>
                {error}
              </div>
            )}

            {success && (
              <div className={styles.successMessage}>
                <span className={styles.successIcon}>‚úÖ</span>
                {success}
              </div>
            )}

            <div className={styles.formRow}>
              <div className={styles.formGroup}>
                <label htmlFor="username" className={styles.formLabel}>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                <input
                  id="username"
                  type="text"
                  placeholder="john_doe"
                  className={styles.formInput}
                  value={username}
                  onChange={e => setUsername(e.target.value)}
                  required
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="email" className={styles.formLabel}>Email</label>
                <input
                  id="email"
                  type="email"
                  placeholder="john@example.com"
                  className={styles.formInput}
                  value={email}
                  onChange={e => setEmail(e.target.value)}
                  required
                />
              </div>
            </div>

            <div className={styles.formRow}>
              <div className={styles.formGroup}>
                <label htmlFor="password" className={styles.formLabel}>–ü–∞—Ä–æ–ª—å</label>
                <input
                  id="password"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  className={styles.formInput}
                  value={password}
                  onChange={e => setPassword(e.target.value)}
                  required
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="confirmPassword" className={styles.formLabel}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                <input
                  id="confirmPassword"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  className={styles.formInput}
                  value={confirmPassword}
                  onChange={e => setConfirmPassword(e.target.value)}
                  required
                />
              </div>
            </div>

            <div className={styles.termsSection}>
              <p className={styles.termsText}>
                –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏{" "}
                <a href="#" className={styles.termsLink}>–£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
                {" "}–∏{" "}
                <a href="#" className={styles.termsLink}>–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
              </p>
            </div>

            <button
              type="submit"
              disabled={isLoading || success}
              className={styles.authButton}
            >
              {isLoading ? (
                <span className={styles.buttonLoading}>
                  <span className={styles.spinner}></span>
                  –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞...
                </span>
              ) : success ? (
                <span className={styles.buttonLoading}>
                  <span className={styles.successIcon}>‚úÖ</span>
                  –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...
                </span>
              ) : (
                "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
              )}
            </button>
          </form>

          <div className={styles.authFooter}>
            <p className={styles.footerText}>
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{" "}
              <a href="/login/email" className={styles.footerLink}>
                –í–æ–π—Ç–∏
              </a>
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}